version: 2.1
orbs:
  node: circleci/node@5.0.1
jobs:
  build-test:
    docker:
      - image: cimg/base:stable
      - image: circleci/postgres:11-alpine-ram
        environment:
          ENV: dev
          HOST: "127.0.0.1"
          SERVER_PORT: "5000"
          TEST_PORT: "4000"
          PG_DB: tech_store
          PG_DB_TEST: tech_store_test
          PG_USER: udacity
          PG_PASSWORD: "123"
          PG_PORT: "5432"
          SALT: "10"
          PEPPER: pass-$1$2$3$-word
          SECRET_TOKEN: secret-$1$2$3$-token
    steps:
      - node/install
      - checkout

      - run:
          name: Configure Psql
          command: |
            sudo apt-get install -y postgresql postgresql-client libpq-dev
            echo 127.0.0.1 devhost | sudo tee -a /etc/hosts
            sudo service postgresql start
            sudo -u root psql -d postgres
            CREATE USER udacity WITH PASSWORD '123';
            CREATE DATABASE tech_store_test;
            GRANT ALL PRIVILEGES ON DATABASE tech_store_test TO udacity;

      - run:
          # Install backend dependencies
          name: Install Back-End
          command: |
            npm i --prefix backend

      - run:
          # Build backend
          name: Install Back-End
          command: |
            npm run build --prefix backend

      - run:
          # Backend Test
          name: Install Back-End
          command: |
            npm run ci:test --prefix backend

      # - restore_cache:
      #     keys:
      #       - v1-my-project-{{ checksum "project.clj" }}
      #       - v1-my-project-

      # - run:
      #     environment:
      #       SSH_TARGET: "localhost"
      #       TEST_ENV: "linux"
      #     command: |
      #       set -xu
      #       mkdir -p ${TEST_REPORTS}
      #       run-tests.sh
      #       cp out/tests/*.xml ${TEST_REPORTS}

      # - run: |
      #     set -xu
      #     mkdir -p /tmp/artifacts
      #     create_jars.sh << pipeline.number >>
      #     cp *.jar /tmp/artifacts

      # - save_cache:
      #     key: v1-my-project-{{ checksum "project.clj" }}
      #     paths:
      #       - ~/.m2

      # # Save artifacts
      # - store_artifacts:
      #     path: /tmp/artifacts
      #     destination: build

      # # Upload test results
      # - store_test_results:
      #     path: /tmp/test-reports

# Invoke jobs via workflows
workflows:
  project-workflow:
    jobs:
      - build-test
