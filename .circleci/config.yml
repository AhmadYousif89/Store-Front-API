# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1
orbs:
  node: circleci/node@5.0.1
  aws-cli: circleci/aws-cli@2.1.0
  s3-cli: circleci/aws-s3@3.0.0
  ebs-cli: circleci/aws-elastic-beanstalk@2.0.1
# Define a job to be invoked later in a workflow.
jobs:
  build-test:
    working_directory: ~/circleci-demo-ruby-rails
    # Specify the execution environments.
    docker:
      - image: cimg/base:stable
      - image: cimg/node:16.14.0
      - image: cimg/ruby:2.6-node
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: cimg/postgres:14.0
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle-test_test
    # Add steps to the job
    steps:
      - node/install
      - checkout
      - run:
          name: Install Packages
          command: |
            npm install
      - run:
          name: Build and Complie
          command: |
            npm run build
      # - restore_cache:
      #     keys:
      #       - rails-demo-{{ checksum "Gemfile.lock" }}
      #       - rails-demo-

      # # Bundle install dependencies
      # - run:
      #     name: Install dependencies
      #     command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3

      - run: sudo apt install -y postgresql-client || true

      # Store bundle cache
      # - save_cache:
      #     key: rails-demo-{{ checksum "Gemfile.lock" }}
      #     paths:
      #       - vendor/bundle

      # - run:
      #     name: Database Setup
      #     command: |
      #       bundle exec rake db:create
      #       bundle exec rake db:structure:load

      - run:
          name: Parallel RSpec
          command: bin/rails test

      # Save artifacts
      - store_test_results:
          path: /tmp/test-results

      # - run:
      #     name: Lint
      #     command: |
      #       npm run lint
      # - run:
      #     name: Prettier
      #     command: |
      #       npm run prettier
      - run:
          name: Test
          command: |
            npm test
      - run:
          name: Done
          command: echo "Job Done"

# Invoke jobs via workflows
workflows:
  project-workflow:
    jobs:
      - build-test
